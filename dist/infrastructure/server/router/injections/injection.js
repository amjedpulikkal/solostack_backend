"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.stripeController = exports.studentCtrl = exports.mentorCtrl = exports.chatCtrl = exports.ChatGroupUseCases = exports.redisDb = exports.connectedUserSockets = void 0;
const studentController_1 = require("../../../../controllers/studentController");
const studentUsecases_1 = require("../../../../usecases/studentUsecases");
const OtpRepository_1 = require("../../../mongodb/repository/OtpRepository");
const otpSchema_1 = require("../../../mongodb/model/otpSchema");
const paymentHistorySchema_1 = __importDefault(require("../../../mongodb/model/paymentHistorySchema"));
const studentRepository_1 = require("../../../mongodb/repository/studentRepository");
const uuid_1 = require("../../../services/uuid");
const nodemailer_1 = require("../../../services/nodemailer");
const hashPassword_1 = require("../../../services/hashPassword");
const token_1 = require("../../../services/token");
const stripe_1 = require("../../../services/stripe");
const mentorController_1 = __importDefault(require("../../../../controllers/mentorController"));
const mentorUsecases_1 = require("../../../../usecases/mentorUsecases");
const mentorRepository_1 = require("../../../../infrastructure/mongodb/repository/mentorRepository");
const s3_1 = require("../../../../infrastructure/services/aws/s3");
const imageResize_1 = require("../../../../infrastructure/services/imageResize ");
const reviewTimeRepository_1 = require("../../../mongodb/repository/reviewTimeRepository");
const reiewRepository_1 = require("../../../mongodb/repository/reiewRepository");
const reviewTimeSchema_1 = require("../../../mongodb/model/reviewTimeSchema");
const reviewSchema_1 = require("../../../mongodb/model/reviewSchema");
const chatUseCases_1 = require("../../../../usecases/chatUseCases");
const chatGroupRepository_1 = require("../../../../infrastructure/mongodb/repository/chatGroupRepository");
const chatMessageRepository_1 = require("../../../mongodb/repository/chatMessageRepository");
const chatGroupController_1 = require("../../../../controllers/chatGroupController");
const redis_1 = require("../../../../infrastructure/services/redis");
const stripeUseCases_1 = require("../../../../usecases/stripeUseCases");
const stripe_2 = require("../../../../controllers/stripe");
const paymentHistoryRepository_1 = require("../../../../infrastructure/mongodb/repository/paymentHistoryRepository");
const exchangeRate_1 = require("../../../../infrastructure/services/exchangeRate");
const socketIo_1 = require("../../../../infrastructure/services/socketIo");
const turnAndStun_1 = require("../../../../infrastructure/services/turnAndStun");
// import { emitEventToUser } from "@infrastructure/services/socketIo"
console.log(socketIo_1.socketEmitEventToUser);
exports.connectedUserSockets = new Map();
console.log(exports.connectedUserSockets, "-------");
const studentRepo = new studentRepository_1.StudentRepository();
const uuid = new uuid_1.Uuid();
const otpRepository = new OtpRepository_1.OtpRepository(otpSchema_1.OtpModel);
const reviewTimeRepository = new reviewTimeRepository_1.ReviewRepository(reviewTimeSchema_1.reviewModel);
const reviewRepository = new reiewRepository_1.ReviewRepository(reviewSchema_1.reviewModel);
const nodemailer = new nodemailer_1.Nodemailer();
const hashPassword = new hashPassword_1.Encrypt();
const staticFile = new s3_1.AwsS3();
const token = new token_1.Token();
const sharp = new imageResize_1.Sharp();
const stripeServices = new stripe_1.StripeServices();
const turnStunServer = new turnAndStun_1.TurnStunServer();
exports.redisDb = new redis_1.RedisDb();
const exchangeRate = new exchangeRate_1.ExchangeRate();
const paymentHistoryRepository = new paymentHistoryRepository_1.PaymentHistoryRepository(paymentHistorySchema_1.default);
const stripeUseCases = new stripeUseCases_1.StripeUseCases(stripeServices, paymentHistoryRepository, studentRepo, exchangeRate, turnStunServer);
const studentUsecase = new studentUsecases_1.StudentUsecase(studentRepo, otpRepository, uuid, nodemailer, hashPassword, token, staticFile, reviewRepository, exports.redisDb);
const mentorRepository = new mentorRepository_1.MentorRepository();
const mentorUseCases = new mentorUsecases_1.MentorUseCases(mentorRepository, reviewTimeRepository, otpRepository, uuid, nodemailer, hashPassword, token, staticFile, sharp, reviewRepository, exports.redisDb, socketIo_1.socketEmitEventToUser);
const ChatGroupRepo = new chatGroupRepository_1.chatGroupRepo();
const chatMessageRepo = new chatMessageRepository_1.chatMessageRepository();
exports.ChatGroupUseCases = new chatUseCases_1.chatGroupUseCases(ChatGroupRepo, chatMessageRepo, staticFile, sharp);
exports.chatCtrl = new chatGroupController_1.chatGroup(exports.ChatGroupUseCases);
exports.mentorCtrl = new mentorController_1.default(mentorUseCases);
exports.studentCtrl = new studentController_1.studentController(studentUsecase);
exports.stripeController = new stripe_2.StripeController(stripeUseCases);
